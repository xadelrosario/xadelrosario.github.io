# Guessing Game Flowchart

> ⚠️ Note: GitHub does not render Mermaid diagrams in standard `.md` files.  
> To preview this diagram visually, paste it into [Mermaid Live Editor](https://mermaid.live).

```mermaid
flowchart TD
    A[Start Game] --> B[Initialize game variables<br>Generate random number]
    B --> C[Prompt user for a guess]
    C --> D[Check if input is a valid number]
    D -- No --> E[Show error message<br>Ask for input again]
    E --> C
    D -- Yes --> F[Compare guess with target number]
    F -- Guess is too low --> G[Inform user: Too low]
    F -- Guess is too high --> H[Inform user: Too high]
    F -- Guess is correct --> I[Inform user: Correct!]
    G --> J[Check attempts remaining]
    H --> J
    J -- Attempts remaining --> C
    J -- No attempts left --> K[Reveal correct answer<br>End Game]
    I --> L[Prompt: Play again?]
    K --> L
    L -- Yes --> B
    L -- No --> M[End Game]


# Number Guessing Game - Description

One of the oldest games in history, the guessing game is about as simple as it comes. In case you are new to planet Earth, here is a description of how it works:

- The game begins by selecting a random number within a given range.
- The player is prompted to enter a number.
- The input is validated to ensure it is a valid number.
- If the guess is too high or too low, the player is prompted and allowed to guess again. See where this is going?
- The player has a limited number of attempts to guess correctly.
- If the guess is correct, the player is congratulated.
- If all attempts are used without a correct guess, the correct number is revealed.
- At the end of each game, the player is asked if they would like to play again.


